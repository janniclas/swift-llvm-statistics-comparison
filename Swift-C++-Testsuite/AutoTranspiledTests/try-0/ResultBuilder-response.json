{"id":"cmpl-6hEqv1zPjhsnJye2hZ2z6gJ6lRYMF","object":"text_completion","created":1675763217,"model":"text-davinci-003","choices":[{"text":"\n\n#include <iostream>\n#include <string>\nusing namespace std;\n\nstruct Drawable {\n    virtual string draw() = 0;\n};\n\nstruct Line : Drawable {\n    Drawable* elements[1000];\n    int size;\n\n    Line(Drawable *element){\n        elements[0] = element;\n        size = 1;\n    }\n    void add(Drawable *element){\n        elements[size++] = element;\n    }\n    string draw(){\n        string str = \"\";\n        for (int i = 0; i < size; i++){\n            str += elements[i]->draw();\n        }\n        return str;\n    }    \n};\n\nstruct Text : Drawable\n{\n    string content;\n    Text(string content){\n        this->content = content;\n    }\n    string draw(){\n        return content;\n    }\n};\n\nstruct Space : Drawable {\n    string draw(){\n        return \" \";\n    }\n};\n\nstruct Stars : Drawable {\n    int length;\n    Stars(int length){\n        this->length = length;\n    }\n    string draw(){\n        string stars = \"\";\n        for (int i = 0; i < length; i++){\n            stars += \"*\";\n        }\n        return stars;\n    }\n};\n\nstruct AllCaps : Drawable {\n    Drawable *content;\n    AllCaps(Drawable *content){\n        this->content = content;\n    }\n    string draw(){\n        return content->draw().substr(0, content->draw().length());\n    }\n};\n\nDrawable*  makeGreeting(string name = \"\") {\n    Drawable *stars1 = new Stars(3);\n    Drawable *text = new Text(\"Hello \");\n    Drawable *space = new Space();\n    Drawable *nameText;\n    if (name.length() != 0){\n        nameText = new Text(name + \"!\");\n    }\n    else {\n        nameText = new Text(\"World!\");\n    }\n    Drawable *capsNameText = new AllCaps(nameText);\n    Drawable *stars2 = new Stars(2);\n    Line *final = new Line(stars1);\n    final->add(text);\n    final->add(space);\n    final->add(capsNameText);\n    final->add(stars2);\n    return final;\n    \n}\n\nint main(){\n    Drawable *genericGreeting = makeGreeting();\n    cout << genericGreeting->draw() << '\\n';\n    \n    Drawable *personalGreeting = makeGreeting(\"Ravi Patel\");\n    cout << personalGreeting->draw() << '\\n';\n    return 0;\n}","index":0,"logprobs":null,"finish_reason":"stop"}],"usage":{"prompt_tokens":571,"completion_tokens":651,"total_tokens":1222}}