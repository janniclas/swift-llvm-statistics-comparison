{"model":"text-davinci-003","prompt":"# Convert this from Swift to C++\n# Swift version\n// Collections defined by the standard library like arrays,\n// dictionaries, and strings use an optimization to reduce the\n// performance cost of copying. Instead of making a copy immediately,\n// these collections share the memory where the elements are stored\n// between the original instance and any copies. If one of the copies\n// of the collection is modified, the elements are copied just before the\n// modification. The behavior you see in your code is always as if a copy\n// took place immediately.\n\n@main\nstruct MyMain {\n\n    static func main() {\n        let res = Resolution(width: 1920, height: 1080)\n        var copied = res\n        copied.height = 42\n        //        print(res.height)\n        //        print(copied.height)\n    }\n}\n\nstruct Resolution {\n    var width = 0\n    var height = 0\n}\n# End\n # C++ version","max_tokens":2048,"frequency_penalty":0,"presence_penalty":0,"stop":["###"]}