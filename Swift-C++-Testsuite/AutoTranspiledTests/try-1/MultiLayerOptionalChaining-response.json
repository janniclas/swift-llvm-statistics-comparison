{"id":"cmpl-6hFLPgiQcYpwfZSu8PdDvHanMzPzr","object":"text_completion","created":1675765107,"model":"text-davinci-003","choices":[{"text":"\n#include <iostream>\n#include <string>\n\nclass Person {\n\tpublic: \n\t\tResidence *residence;\n};\n\nclass Residence {\n\tpublic:\n\t\tRoom *rooms;\n\t\tint numberOfRooms;\n\t\tRoom* get(int i);\n\t\tvoid set(int i, Room room);\n\t\tvoid printNumberOfRooms();\n\t\tAddress *address;\n};\n\nclass Room {\n\tpublic:\n\t   std::string name;\n\t   Room(std::string name0){\n\t\t   this->name = name0;\n\t   }\n};\n\nclass Address {\npublic:\n\tstd::string buildingName;\n\tstd::string buildingNumber;\n\tstd::string street;\n\tstd::string buildingIdentifier();\n};\n\nint main(){\n\tPerson john = Person();\n\tif(john.residence->numberOfRooms != NULL){\n\t\tstd::cout << \"John's residence has \" << john.residence->numberOfRooms << \" room(s).\" << std::endl;\n\t}\n\telse {\n\t\tstd::cout << \"Unable to retrieve the number of rooms.\" << std::endl;\n\t}\n\tAddress someAddress = Address();\n\tsomeAddress.buildingNumber = \"29\";\n\tsomeAddress.street = \"Acacia Road\";\n\tjohn.residence->address = someAddress;\n\tjohn.residence->address = createAddress();\n\tif(john.residence->printNumberOfRooms() != NULL){\n\t\tstd::cout << \"It was possible to print the number of rooms.\" <<std::endl;\n\t}\n\telse {\n\t\tstd::cout << \"It was not possible to print the number of rooms.\" << std::endl;\n\t}\n\tif((john.residence->address = someAddress) != NULL){\n\t\tstd::cout << \"It was possible to set the address.\" << std::endl;\n\t}\n\telse {\n\t\tstd::cout << \"It was not possible to set the address.\" << std::endl;\n\t}\n\tif(john.residence->get(0)->name != NULL){\n\t\tstd::cout << \"The first room name is \" << john.residence->get(0)->name << \".\" << std::endl;\n\t}\n\telse {\n\t\tstd::cout << \"Unable to retrieve the first room name.\" << std::endl;\n\t}\n\tjohn.residence->set(0, Room(\"Bathroom\"));\n\n\tResidence johnsHouse = Residence();\n\tjohnsHouse.rooms[0] = Room(\"Living Room\");\n\tjohnsHouse.rooms[1] = Room(\"Kitchen\");\n\tjohn.residence = &johnsHouse;\n\n\tif(john.residence->get(0)->name != NULL){\n\t\tstd::cout << \"The first room name is \" << john.residence->get(0)->name << \".\" << std::endl;\n\t}\n\telse {\n\t\tstd::cout << \"Unable to retrieve the first room name.\" << std::endl;\n\t}\n\n\tAddress johnsAddress = Address();\n\tjohnsAddress.buildingName = \"The Larches\";\n\tjohnsAddress.street = \"Laurel Street\";\n\tjohn.residence->address = &johnsAddress;\n\n\tif(john.residence->address->street != NULL){\n\t\tstd::cout << \"John's street name is \" << john.residence->address->street << \".\" << std::endl;\n\t}\n\telse {\n\t\tstd::cout << \"Unable to retrieve the address.\" << std::endl;\n\t}\n\n\tif(john.residence->address->buildingIdentifier() != NULL){\n\t\tstd::cout << \"John's building identifier is \" << john.residence->address->buildingIdentifier() << \".\" << std::endl;\n\t\tif(john.residence->address->buildingIdentifier().substr(0,3) == \"The\"){\n\t\t\tstd::cout << \"John's building identifier begins with \\\"The\\\".\" << std::endl;\n\t\t}\n\t\telse{\n\t\t\tstd::cout << \"John's building identifier doesn't begin with \\\"The\\\".\";\n\t\t}\n\t}\n\treturn 0;\n}\n\nRoom* Residence::get(int i){\n\treturn &rooms[i];\n}\n\nvoid Residence::set(int i, Room room){\n\trooms[i] = room;\n}\n\nvoid Residence:: printNumberOfRooms(){\n\tstd::cout << \"The number of rooms is \" << numberOfRooms << std::endl;\n}\n\nstd::string Address::buildingIdentifier(){\n   if(buildingNumber != \"\" && street != \"\"){\n\t   return buildingNumber + \" \" + street;\n   }\n   else if(buildingName != \"\"){\n\t   return buildingName;\n   }\n   else {\n\t   return \"\";\n   }\n}\n\nAddress createAddress(){\n\tstd::cout << \"Function was called.\" << std::endl;\n\tAddress someAddress = Address();\n\tsomeAddress.buildingNumber = \"29\";\n\tsomeAddress.street = \"Acacia Road\";\n\treturn someAddress;\n}","index":0,"logprobs":null,"finish_reason":"stop"}],"usage":{"prompt_tokens":986,"completion_tokens":1254,"total_tokens":2240}}