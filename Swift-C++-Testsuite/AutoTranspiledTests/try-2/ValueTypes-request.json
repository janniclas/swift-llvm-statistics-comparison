{"model":"text-davinci-003","prompt":"# Convert this from Swift to C++\n# Swift version\n// Swift’s String type is a value type. If you create a new String value,\n//  that String value is copied when it’s passed to a function or method,\n//  or when it’s assigned to a constant or variable. In each case, a new copy\n//  of the existing String value is created, and the new copy is passed or assigned,\n//   not the original version. Value types are described in Structures and Enumerations Are Value Types.\n\n@main\nstruct MyMain {\n\n    static func main() {\n        // search builtinStringLiteral.* in swift repository\n        // sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC\n        let greeting = \"Hello World!\"\n        var a = takeStringGiveString(input: greeting)\n        var b = takeStringMutateGiveString(input: greeting)\n        var c = identity(input: greeting)\n\n    }\n\n    // Behind the scenes, Swift’s compiler optimizes string usage so that actual\n    // copying takes place only when absolutely necessary. This means you always\n    // get great performance when working with strings as value types.\n    static func takeStringMutateGiveString(input: String) -> String {\n        var m = input\n        m += \" Awesome Day.\"\n        return m\n    }\n\n    static func takeStringGiveString(input: String) -> String {\n        let copied = input\n        return copied\n    }\n\n    static func identity(input: String) -> String {\n        return input\n    }\n\n}\n# End\n # C++ version","max_tokens":2048,"frequency_penalty":0,"presence_penalty":0,"stop":["###"]}