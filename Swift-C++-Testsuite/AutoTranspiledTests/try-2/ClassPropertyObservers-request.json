{"model":"text-davinci-003","prompt":"# Convert this from Swift to C++\n# Swift version\n// If you pass a property that has observers to a function as an in-out parameter,\n// the willSet and didSet observers are always called. This is because of the\n// copy-in copy-out memory model for in-out parameters: The value is always written\n// back to the property at the end of the function. For a detailed discussion of\n// the behavior of in-out parameters, see In-Out Parameters.\n\n@main\nstruct MyMain {\n\n    static func main() {\n        let stepCounter = StepCounter()\n        stepCounter.totalSteps = 200\n    }\n}\nclass StepCounter {\n    var totalSteps: Int = 0 {\n        willSet(newTotalSteps) {\n            print(\"About to set totalSteps to \\(newTotalSteps)\")\n        }\n        didSet {\n            if totalSteps > oldValue {\n                print(\"Added \\(totalSteps - oldValue) steps\")\n            }\n        }\n    }\n}\n# End\n # C++ version","max_tokens":2048,"frequency_penalty":0,"presence_penalty":0,"stop":["###"]}