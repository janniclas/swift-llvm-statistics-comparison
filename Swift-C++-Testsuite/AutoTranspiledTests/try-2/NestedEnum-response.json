{"id":"cmpl-6hEyVEFgaX9kyY5gT9VapSOsbxkqC","object":"text_completion","created":1675763687,"model":"text-davinci-003","choices":[{"text":"\n#include <iostream> \n#include <vector>\n \nenum class Kind {\n    NEGATIVE, \n    ZERO, \n    POSITIVE\n};\n \nclass Int {\npublic:\n    Int(int value) {\n        this->value = value;\n    }\n \n    Kind kind() {\n        switch (value) {\n            case 0:\n                return Kind::ZERO;\n            case (int)::value > 0:\n                return Kind::POSITIVE;\n            default:\n                return Kind::NEGATIVE;\n        }\n    }\n \nprivate:\n    int value;\n};\n \nvoid printIntegerKinds(std::vector<Int> &numbers) {\n    std::vector<Int>::iterator it;\n    for (it = numbers.begin(); it != numbers.end(); ++it) {\n        switch((*it).kind()) {\n            case Kind::NEGATIVE:\n                std::cout << \"- \";\n                break;\n            case Kind::ZERO:\n                std::cout << \"0 \";\n                break;\n            case Kind::POSITIVE:\n                std::cout << \"+ \";\n                break;\n            default:\n                break;\n        }\n    } \n    std::cout << std::endl;\n}\n \nint main() {\n    std::vector<Int> numbers;\n    numbers.push_back(Int(3));\n    numbers.push_back(Int(19));\n    numbers.push_back(Int(-27));\n    numbers.push_back(Int(0));\n    numbers.push_back(Int(-6));\n    numbers.push_back(Int(0));\n    numbers.push_back(Int(7));\n \n    printIntegerKinds(numbers);\n \n    return 0;\n}","index":0,"logprobs":null,"finish_reason":"stop"}],"usage":{"prompt_tokens":232,"completion_tokens":431,"total_tokens":663}}