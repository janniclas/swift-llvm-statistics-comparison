{"model":"text-davinci-003","prompt":"# Convert this from Swift to C++\n# Swift version\n@main\nstruct MyMain {\n    static let favoriteSnacks = [\n        \"Alice\": \"Chips\",\n        \"Bob\": \"Licorice\",\n        \"Eve\": \"Pretzels\",\n    ]\n    static func main() {\n\n        let vendingMachine = VendingMachine()\n        vendingMachine.coinsDeposited = 8\n        do {\n            try buyFavoriteSnack(person: \"Alice\", vendingMachine: vendingMachine)\n            print(\"Success! Yum.\")\n        } catch VendingMachineError.invalidSelection {\n            print(\"Invalid Selection.\")\n        } catch VendingMachineError.outOfStock {\n            print(\"Out of Stock.\")\n        } catch VendingMachineError.insufficientFunds(let coinsNeeded) {\n            print(\"Insufficient funds. Please insert an additional \\(coinsNeeded) coins.\")\n        } catch {\n            print(\"Unexpected error: \\(error).\")\n        }\n\n    }\n\n    static func buyFavoriteSnack(person: String, vendingMachine: VendingMachine) throws {\n        let snackName = favoriteSnacks[person] ?? \"Candy Bar\"\n        try vendingMachine.vend(itemNamed: snackName)\n    }\n\n}\n\nstruct Item {\n    var price: Int\n    var count: Int\n}\n\nenum VendingMachineError: Error {\n    case invalidSelection\n    case insufficientFunds(coinsNeeded: Int)\n    case outOfStock\n}\n\nclass VendingMachine {\n    var inventory = [\n        \"Candy Bar\": Item(price: 12, count: 7),\n        \"Chips\": Item(price: 10, count: 4),\n        \"Pretzels\": Item(price: 7, count: 11),\n    ]\n    var coinsDeposited = 0\n\n    func vend(itemNamed name: String) throws {\n        guard let item = inventory[name] else {\n            throw VendingMachineError.invalidSelection\n        }\n\n        guard item.count > 0 else {\n            throw VendingMachineError.outOfStock\n        }\n\n        guard item.price <= coinsDeposited else {\n            throw VendingMachineError.insufficientFunds(coinsNeeded: item.price - coinsDeposited)\n        }\n\n        coinsDeposited -= item.price\n\n        var newItem = item\n        newItem.count -= 1\n        inventory[name] = newItem\n\n        print(\"Dispensing \\(name)\")\n    }\n}\n# End\n # C++ version","max_tokens":2048,"frequency_penalty":0,"presence_penalty":0,"stop":["###"]}