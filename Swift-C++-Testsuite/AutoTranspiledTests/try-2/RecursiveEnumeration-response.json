{"id":"cmpl-6hEjuaLPZYzMax1HtL1zGIUu4LVJl","object":"text_completion","created":1675762782,"model":"text-davinci-003","choices":[{"text":"\nenum class ArithmeticExpression \n{ \n    number, \n    addition, \n    multiplication,\n}; \n\nstruct MyMain {\n\tint evaluate(struct ArithmeticExpression expression) \n\t{ \n\t\tswitch (expression.type) \n\t\t{ \n\t\t\tcase Enum::number: \n\t\t\t\treturn expression.value; \n\t\t\tcase Enum::addition: \n\t\t\t\treturn evaluate(expression.left) + \n\t\t\t\t\tevaluate(expression.right); \n\t\t\tcase Enum::multiplication: \n\t\t\t\treturn evaluate(expression.left) * \n\t\t\t\t\tevaluate(expression.right); \n\t\t} \n\t} \n\n\tstatic void main() \n\t{ \n\t\tArithmeticExpression five = { ArithmeticExpression::number, 5 }; \n\t\tArithmeticExpression four = { ArithmeticExpression::number, 4 }; \n\t\tArithmeticExpression sum = \n\t\t\t{ ArithmeticExpression::addition, five, four }; \n\t\tArithmeticExpression product = { \n\t\t\tArithmeticExpression::multiplication, sum, \n\t\t\t\t{ ArithmeticExpression::number, 5 } \n\t\t}; \n\t\tint result = evaluate(product); \n\t} \n};","index":0,"logprobs":null,"finish_reason":"stop"}],"usage":{"prompt_tokens":321,"completion_tokens":318,"total_tokens":639}}