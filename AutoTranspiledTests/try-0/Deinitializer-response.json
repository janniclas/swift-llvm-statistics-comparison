{"id":"cmpl-6hFAFuw92Bw7zsU6s9VJSYZ9gcmJU","object":"text_completion","created":1675764415,"model":"text-davinci-003","choices":[{"text":"\n#include <iostream>\n#include <algorithm>\n\nclass Player {\n    private:\n        int coinsInPurse;\n    public:\n        Player(int coins);\n        void win(int coins);\n        ~Player();\n};\n\nPlayer::Player(int coins) {\n    coinsInPurse = Bank::distribute(coins);\n}\n\nvoid Player::win(int coins) {\n    coinsInPurse += Bank::distribute(coins);\n}\n\nPlayer::~Player() {\n    Bank::receive(coinsInPurse);\n}\n\nclass Bank {\n    private:\n        static int coinsInBank;\n    public:\n        static int distribute(int numberOfCoinsRequested);\n        static void receive(int coins);\n};\n\nint Bank::distribute(int numberOfCoinsRequested) {\n    int numberOfCoinsToVend = std::min(numberOfCoinsRequested, coinsInBank);\n    coinsInBank -= numberOfCoinsToVend;\n    return numberOfCoinsToVend;\n}\n\nvoid Bank::receive(int coins) {\n    coinsInBank += coins;\n}\n\nint Bank::coinsInBank = 10000;\n\nint main() {\n    Player *playerOne{nullptr};\n    playerOne = new Player(100);\n    playerOne->win(2000);\n    std::cout << \"PlayerOne won 2000 coins & now has \" << playerOne->coinsInPurse  << \" coins\" << std::endl;\n    std::cout << \"The bank now only has \" << Bank::coinsInBank << \" coins left\" << std::endl;\n    delete playerOne;\n    std::cout << \"PlayerOne has left the game\" << std::endl;\n    std::cout << \"The bank now has \" << Bank::coinsInBank << \" coins\" << std::endl;\n    return 0;\n}","index":0,"logprobs":null,"finish_reason":"stop"}],"usage":{"prompt_tokens":377,"completion_tokens":447,"total_tokens":824}}