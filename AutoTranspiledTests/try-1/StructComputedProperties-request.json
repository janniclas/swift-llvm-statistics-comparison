{"model":"text-davinci-003","prompt":"# Convert this from Swift to C++\n# Swift version\n// If a property marked with the lazy modifier is accessed by\n// multiple threads simultaneously and the property hasn’t yet\n// been initialized, there’s no guarantee that the property\n// will be initialized only once.\n\n@main\nstruct MyMain {\n\n    static func main() {\n        var square = Rect(\n            origin: Point(x: 0.0, y: 0.0),\n            size: Size(width: 10.0, height: 10.0))\n        let initialSquareCenter = square.center\n        // initialSquareCenter is at (5.0, 5.0)\n        square.center = Point(x: 15.0, y: 15.0)\n    }\n}\nstruct Point {\n    var x = 0.0, y = 0.0\n}\nstruct Size {\n    var width = 0.0, height = 0.0\n}\nstruct Rect {\n    var origin = Point()\n    var size = Size()\n    var center: Point {\n        get {\n            let centerX = origin.x + (size.width / 2)\n            let centerY = origin.y + (size.height / 2)\n            return Point(x: centerX, y: centerY)\n        }\n        set(newCenter) {\n            origin.x = newCenter.x - (size.width / 2)\n            origin.y = newCenter.y - (size.height / 2)\n        }\n    }\n}\n# End\n # C++ version","max_tokens":2048,"frequency_penalty":0,"presence_penalty":0,"stop":["###"]}