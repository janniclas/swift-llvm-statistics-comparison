{"model":"text-davinci-003","prompt":"# Convert this from Swift to C++\n# Swift version\n@main\nstruct MyMain {\n\n    static func main() {\n        let someVehicle = Vehicle()\n        let train = Train()\n        train.makeNoise()\n        let car = Car()\n        car.currentSpeed = 25.0\n        car.gear = 3\n        let carDes = car.description\n    }\n}\nclass Vehicle {\n    var currentSpeed = 0.0\n    var description: String {\n        return \"traveling at \\(currentSpeed) miles per hour\"\n    }\n    func makeNoise() {\n        // do nothing - an arbitrary vehicle doesn't necessarily make a noise\n    }\n}\n\nclass Train: Vehicle {\n    override func makeNoise() {\n        print(\"Choo Choo\")\n    }\n}\n\n//If you provide a setter as part of a property override, you must also\n//provide a getter for that override. If you don’t want to modify\n//the inherited property’s value within the overriding getter, you\n//can simply pass through the inherited value by returning\n//super.someProperty from the getter, where someProperty is the name\n//of the property you are overriding.\nclass Car: Vehicle {\n    var gear = 1\n    override var description: String {\n        return super.description + \" in gear \\(gear)\"\n    }\n}\n# End\n # C++ version","max_tokens":2048,"frequency_penalty":0,"presence_penalty":0,"stop":["###"]}