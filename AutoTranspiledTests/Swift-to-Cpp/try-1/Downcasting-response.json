{"id":"cmpl-6hEn9kZcWDGA61nlLceSdAJ23UGxF","object":"text_completion","created":1675762983,"model":"text-davinci-003","choices":[{"text":"\n#include <iostream>\nusing namespace std; \n\n\nclass MediaItem {\n    public:\n    string name;\n    MediaItem(string name) : name(name){};\n};\n\nclass Movie : public MediaItem{\n    public:\n    string director; \n    Movie(string name, string director) : MediaItem(name), director(director){};\n}; \n\nclass Song : public MediaItem{\n    public: \n    string artist; \n    Song(string name, string artist) : MediaItem(name), artist(artist){};\n};\n\nint main(){\n    std::vector<MediaItem*> library = { \n        new Movie(\"Casablanca\", \"Michael Curtiz\"),\n        new Song(\"Blue Suede Shoes\", \"Elvis Presley\"),\n        new Movie(\"Citizen Kane\", \"Orson Welles\"),\n        new Song(\"The One And Only\", \"Chesney Hawkes\"),\n        new Song(\"Never Gonna Give You Up\", \"Rick Astley\")\n    }; \n    \n    for(auto item : library){\n        if(Movie* movie = dynamic_cast<Movie*>(item)){\n            cout << \"Movie: \" << movie->name << \", dir. \" << movie->director << endl;\n        } else if (Song* song = dynamic_cast<Song*>(item)){\n            cout << \"Song: \" << song->name << \", by \" << song->artist << endl;\n        }\n    }\n    return 0;\n}","index":0,"logprobs":null,"finish_reason":"stop"}],"usage":{"prompt_tokens":372,"completion_tokens":345,"total_tokens":717}}