{"id":"cmpl-6hFJM3a2ZdqxGjPEThFuMuChZkmNG","object":"text_completion","created":1675764980,"model":"text-davinci-003","choices":[{"text":"\n#include <iostream>\n#include <string>\n#include <vector>\nusing namespace std;\nclass Person {\npublic:\n    Residence* residence = nullptr;\n};\nclass Residence {\npublic:\n    vector<Room> rooms;\n    int numberOfRooms(){\n        return rooms.size();\n    }\n    Room& operator[](const int i){\n        return rooms[i];\n    }\n    void printNumberOfRooms(){\n        cout << \"The number of rooms is \" << numberOfRooms() << endl;\n    }\n    Address* address = nullptr;\n};\nclass Room {\npublic:\n    string name;\n    Room(string name_){ name = name_; };\n};\nclass Address {\npublic:\n    string buildingName;\n    string buildingNumber;\n    string street;\n    string buildingIdentifier(){\n        string ret = \"\";\n        if(buildingNumber !=  \"\" && street != \"\"){\n            ret = buildingNumber + \" \" + street;\n        }else if(buildingName != \"\"){\n            ret = buildingName;\n        }\n        return ret;\n    }\n};\nint main(){\n    Person john;\n    if(john.residence != nullptr && john.residence->numberOfRooms() != 0){\n        cout << \"John's residence has \" << john.residence->numberOfRooms() << \" room(s).\" << endl;\n    }else{\n        cout << \"Unable to retrieve the number of rooms.\" << endl;\n    }\n    Address someAddress;\n    someAddress.buildingNumber = \"29\";\n    someAddress.street = \"Acacia Road\";\n    if(john.residence != nullptr)\n    {\n        john.residence->address = &someAddress;\n        john.residence->address = createAddress();\n    }\n    if(john.residence != nullptr && john.residence->printNumberOfRooms() != 0){\n        cout << \"It was possible to print the number of rooms.\" << endl;\n    }else{\n        cout << \"It was not possible to print the number of rooms.\" << endl;\n    }\n    if(john.residence != nullptr){\n        john.residence->address = &someAddress;\n        cout << \"It was possible to set the address.\" << endl;\n    }else{\n        cout << \"It was not possible to set the address.\" << endl;\n    }\n    if(john.residence != nullptr && john.residence->numberOfRooms() != 0){\n        cout << \"The first room name is \" << john.residence->rooms[0].name << \".\" << endl;\n    }else{\n        cout << \"Unable to retrieve the first room name.\" << endl;\n    }\n    john.residence->rooms[0] = Room(\"Bathroom\");\n    Residence johnsHouse;\n    johnsHouse.rooms.emplace_back(Room(\"Living Room\"));\n    johnsHouse.rooms.emplace_back(Room(\"Kitchen\"));\n    john.residence = &johnsHouse;\n    if(john.residence != nullptr && john.residence->numberOfRooms() != 0){\n        cout << \"The first room name is \" << john.residence->rooms[0].name << \".\" << endl;\n    }else{\n        cout << \"Unable to retrieve the first room name.\" << endl;\n    }\n    Address johnsAddress;\n    johnsAddress.buildingName = \"The Larches\" \n    johnsAddress.street = \"Laurel Street\";\n    john.residence->address = &johnsAddress;\n    if(john.residence != nullptr && john.residence->address!=nullptr){\n        cout << \"John's street name is \" << john.residence->address->street << \".\" << endl;\n    }else{\n        cout << \"Unable to retrieve the address.\" << endl;\n    }\n    if(john.residence != nullptr && john.residence->numberOfRooms() != 0 && john.residence->address != nullptr && john.residence->address->buildingIdentifier() != \"\"){\n        cout << \"John's building identifier is \" << john.residence->address->buildingIdentifier() << \".\" << endl;\n    }\n    if(john.residence != nullptr && john.residence->numberOfRooms() != 0 && john.residence->address != nullptr && john.residence->address->buildingIdentifier() != \"\"){\n        if(john.residence->address->buildingName.substr(0,3) == \"The\"){\n            cout << \"John's building identifier begins with \\\"The\\\"\" << endl;\n        }else{\n            cout << \"John's building identifier doesn't begin with \\\"The\\\".\" << endl;\n        }\n    }\n    return 0;\n}\n\nAddress*  createAddress(){\n    cout << \"Function was called.\" << endl;\n    Address* someAddress = new Address();\n    someAddress->buildingNumber = \"29\";\n    someAddress->street = \"Acacia Road\";\n\n    return someAddress;\n}","index":0,"logprobs":null,"finish_reason":"stop"}],"usage":{"prompt_tokens":986,"completion_tokens":1211,"total_tokens":2197}}